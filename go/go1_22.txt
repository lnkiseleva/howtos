На этой неделе вышел новый релиз Go 1.22. Информация появилась в официальном блоге 6 февраля (https://go.dev/blog/go1.22).
Главным в новой версии стало долгожданное изменение в цикле for. Теперь для каждой итерации цикла создается своя переменная, а не переиспользуется старая переменная, как это было ранее. Поэтому замыкания в цикле теперь будут работать ожидаемым образом.
Рассмотрим пример (из официальной документации https://go.dev/blog/loopvar-preview):

package main

import "fmt"

func main() {
	num := []string{"1", "2", "3"}
	funcs := []func(){}
	for index, value := range num {
		fmt.Printf("[%d] - %s\n", index, value)
		funcs = append(funcs, func() { fmt.Print(value) })
	}

	for _, value := range funcs {
		value()
	}
}


Вывод для этого кода будет такой для версий Go меньше 1.22 (в данном случае Go 1.21.5):
[0] - 1
[1] - 2
[2] - 3
333

Таким образом ипользуется последнее значение переменной value. Чтобы исправить это поведение начиная с версии 1.21 была доступна опция GOEXPERIMENT=loopvar.

В версии Go 1.22 вывод кода из примера выше будет другим:
[0] - 1
[1] - 2
[2] - 3
123
